// Code generated by goa v3.4.2, DO NOT EDIT.
//
// goatopsfarm HTTP client CLI support package
//
// Command:
// $ goa gen github.com/martinohmann/goatops.farm/design

package cli

import (
	"flag"
	"fmt"
	"net/http"
	"os"

	goatfactsc "github.com/martinohmann/goatops.farm/gen/http/goatfacts/client"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// UsageCommands returns the set of commands and sub-commands using the format
//
//    command (subcommand1|subcommand2|...)
//
func UsageCommands() string {
	return `goatfacts (list-facts|random-facts|index)
`
}

// UsageExamples produces an example of a valid invocation of the CLI tool.
func UsageExamples() string {
	return os.Args[0] + ` goatfacts list-facts` + "\n" +
		""
}

// ParseEndpoint returns the endpoint and payload as specified on the command
// line.
func ParseEndpoint(
	scheme, host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restore bool,
) (goa.Endpoint, interface{}, error) {
	var (
		goatfactsFlags = flag.NewFlagSet("goatfacts", flag.ContinueOnError)

		goatfactsListFactsFlags = flag.NewFlagSet("list-facts", flag.ExitOnError)

		goatfactsRandomFactsFlags = flag.NewFlagSet("random-facts", flag.ExitOnError)
		goatfactsRandomFactsNFlag = goatfactsRandomFactsFlags.String("n", "", "")

		goatfactsIndexFlags = flag.NewFlagSet("index", flag.ExitOnError)
	)
	goatfactsFlags.Usage = goatfactsUsage
	goatfactsListFactsFlags.Usage = goatfactsListFactsUsage
	goatfactsRandomFactsFlags.Usage = goatfactsRandomFactsUsage
	goatfactsIndexFlags.Usage = goatfactsIndexUsage

	if err := flag.CommandLine.Parse(os.Args[1:]); err != nil {
		return nil, nil, err
	}

	if flag.NArg() < 2 { // two non flag args are required: SERVICE and ENDPOINT (aka COMMAND)
		return nil, nil, fmt.Errorf("not enough arguments")
	}

	var (
		svcn string
		svcf *flag.FlagSet
	)
	{
		svcn = flag.Arg(0)
		switch svcn {
		case "goatfacts":
			svcf = goatfactsFlags
		default:
			return nil, nil, fmt.Errorf("unknown service %q", svcn)
		}
	}
	if err := svcf.Parse(flag.Args()[1:]); err != nil {
		return nil, nil, err
	}

	var (
		epn string
		epf *flag.FlagSet
	)
	{
		epn = svcf.Arg(0)
		switch svcn {
		case "goatfacts":
			switch epn {
			case "list-facts":
				epf = goatfactsListFactsFlags

			case "random-facts":
				epf = goatfactsRandomFactsFlags

			case "index":
				epf = goatfactsIndexFlags

			}

		}
	}
	if epf == nil {
		return nil, nil, fmt.Errorf("unknown %q endpoint %q", svcn, epn)
	}

	// Parse endpoint flags if any
	if svcf.NArg() > 1 {
		if err := epf.Parse(svcf.Args()[1:]); err != nil {
			return nil, nil, err
		}
	}

	var (
		data     interface{}
		endpoint goa.Endpoint
		err      error
	)
	{
		switch svcn {
		case "goatfacts":
			c := goatfactsc.NewClient(scheme, host, doer, enc, dec, restore)
			switch epn {
			case "list-facts":
				endpoint = c.ListFacts()
				data = nil
			case "random-facts":
				endpoint = c.RandomFacts()
				data, err = goatfactsc.BuildRandomFactsPayload(*goatfactsRandomFactsNFlag)
			case "index":
				endpoint = c.Index()
				data = nil
			}
		}
	}
	if err != nil {
		return nil, nil, err
	}

	return endpoint, data, nil
}

// goatfactsUsage displays the usage of the goatfacts command and its
// subcommands.
func goatfactsUsage() {
	fmt.Fprintf(os.Stderr, `The goatfacts service provides you with important facts about goats.
Usage:
    %s [globalflags] goatfacts COMMAND [flags]

COMMAND:
    list-facts: ListFacts implements ListFacts.
    random-facts: RandomFacts implements RandomFacts.
    index: Index implements Index.

Additional help:
    %s goatfacts COMMAND --help
`, os.Args[0], os.Args[0])
}
func goatfactsListFactsUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] goatfacts list-facts

ListFacts implements ListFacts.

Example:
    `+os.Args[0]+` goatfacts list-facts
`, os.Args[0])
}

func goatfactsRandomFactsUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] goatfacts random-facts -n INT

RandomFacts implements RandomFacts.
    -n INT: 

Example:
    `+os.Args[0]+` goatfacts random-facts --n 2874550282530042957
`, os.Args[0])
}

func goatfactsIndexUsage() {
	fmt.Fprintf(os.Stderr, `%s [flags] goatfacts index

Index implements Index.

Example:
    `+os.Args[0]+` goatfacts index
`, os.Args[0])
}
