// Code generated by goa v3.4.2, DO NOT EDIT.
//
// goatfacts HTTP server types
//
// Command:
// $ goa gen github.com/martinohmann/goatops.farm/design

package server

import (
	goatfacts "github.com/martinohmann/goatops.farm/gen/goatfacts"
	goa "goa.design/goa/v3/pkg"
)

// RandomFactsBadRequestResponseBody is the type of the "goatfacts" service
// "RandomFacts" endpoint HTTP response body for the "BadRequest" error.
type RandomFactsBadRequestResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewRandomFactsBadRequestResponseBody builds the HTTP response body from the
// result of the "RandomFacts" endpoint of the "goatfacts" service.
func NewRandomFactsBadRequestResponseBody(res *goa.ServiceError) *RandomFactsBadRequestResponseBody {
	body := &RandomFactsBadRequestResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewRandomFactsPayload builds a goatfacts service RandomFacts endpoint
// payload.
func NewRandomFactsPayload(n *int) *goatfacts.RandomFactsPayload {
	v := &goatfacts.RandomFactsPayload{}
	v.N = n

	return v
}
