// Code generated by goa v3.4.2, DO NOT EDIT.
//
// creatures client
//
// Command:
// $ goa gen github.com/martinohmann/goatops.farm/design

package creatures

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "creatures" service client.
type Client struct {
	ListEndpoint        goa.Endpoint
	GetEndpoint         goa.Endpoint
	RandomFactsEndpoint goa.Endpoint
}

// NewClient initializes a "creatures" service client given the endpoints.
func NewClient(list, get, randomFacts goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:        list,
		GetEndpoint:         get,
		RandomFactsEndpoint: randomFacts,
	}
}

// List calls the "list" endpoint of the "creatures" service.
func (c *Client) List(ctx context.Context) (res *ListResult, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*ListResult), nil
}

// Get calls the "get" endpoint of the "creatures" service.
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *GetResult, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetResult), nil
}

// RandomFacts calls the "random-facts" endpoint of the "creatures" service.
func (c *Client) RandomFacts(ctx context.Context, p *RandomFactsPayload) (res *RandomFactsResult, err error) {
	var ires interface{}
	ires, err = c.RandomFactsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*RandomFactsResult), nil
}
