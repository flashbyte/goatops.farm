// Code generated by goa v3.4.2, DO NOT EDIT.
//
// goatfacts service
//
// Command:
// $ goa gen github.com/martinohmann/goatops.farm/design

package goatfacts

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The goatfacts service provides you with important facts about goats.
type Service interface {
	// GetFact implements get-fact.
	GetFact(context.Context, *GetFactPayload) (res *Fact, err error)
	// ListFacts implements list-facts.
	ListFacts(context.Context) (res []*Fact, err error)
	// GetRandomFact implements get-random-fact.
	GetRandomFact(context.Context) (res *Fact, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "goatfacts"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"get-fact", "list-facts", "get-random-fact"}

// GetFactPayload is the payload type of the goatfacts service get-fact method.
type GetFactPayload struct {
	// ID of the fact
	ID string
}

// Fact is the result type of the goatfacts service get-fact method.
type Fact struct {
	// A unique ID
	ID string
	// Fact text
	Text string
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "NotFound",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "BadRequest",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
