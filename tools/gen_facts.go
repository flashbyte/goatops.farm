// Copyright 2021 martinohmann
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//go:build tools
// +build tools

package main

import (
	"bufio"
	"bytes"
	"go/format"
	"html"
	"log"
	"net/http"
	"os"
	"regexp"
	"strconv"

	"github.com/microcosm-cc/bluemonday"
)

var factRe = regexp.MustCompile(`^\s+<li>(.+)</?li>`)

func main() {
	resp, err := http.Get("https://raw.githubusercontent.com/binford2k/goatops/master/index.html")
	if err != nil {
		log.Fatal(err)
	}

	defer resp.Body.Close()

	p := bluemonday.NewPolicy()

	r := bufio.NewScanner(resp.Body)

	var buf bytes.Buffer

	buf.WriteString(`// Code generated by "gen_facts.go"; DO NOT EDIT.`)
	buf.WriteString("\n\npackage main\n\n")
	buf.WriteString("var facts = []string{\n")

	for r.Scan() {
		line := r.Text()

		if factRe.MatchString(line) {
			fact := factRe.ReplaceAllString(line, `$1`)
			fact = html.UnescapeString(p.Sanitize(fact))

			buf.WriteString(strconv.Quote(fact))
			buf.WriteString(",\n")
		}
	}

	buf.WriteString("}\n")

	source, err := format.Source(buf.Bytes())
	if err != nil {
		log.Fatal(err)
	}

	if _, err := os.Stdout.Write(source); err != nil {
		log.Fatal(err)
	}
}
