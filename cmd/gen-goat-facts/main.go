// Copyright 2021 martinohmann
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"bytes"
	"go/format"
	"log"
	"net/http"
	"os"
	"path/filepath"
	"strconv"
	"strings"

	"github.com/antchfx/htmlquery"
)

func main() {
	url := "https://raw.githubusercontent.com/binford2k/goatops/master/index.html"

	resp, err := http.Get(url)
	if err != nil {
		log.Fatal(err)
	}

	defer resp.Body.Close()

	doc, err := htmlquery.Parse(resp.Body)
	if err != nil {
		log.Fatal(err)
	}

	nodes, err := htmlquery.QueryAll(doc, "//div[@id='container']//li")
	if err != nil {
		log.Fatal(err)
	}

	var buf bytes.Buffer

	buf.WriteString(`// Goat facts extracted from `)
	buf.WriteString(url)
	buf.WriteString("\n//\n")
	buf.WriteString(`// See license in the source repository `)
	buf.WriteString("https://github.com/binford2k/goatops")
	buf.WriteString("\n//\n")
	buf.WriteString(`// Code generated by "`)
	buf.WriteString(filepath.Base(os.Args[0]))
	buf.WriteString(`"; DO NOT EDIT.`)
	buf.WriteString("\n\npackage data\n\n")
	buf.WriteString("var goatFacts = []string{\n")

	for _, node := range nodes {
		text := strings.TrimSpace(htmlquery.InnerText(node))
		if text == "" {
			continue
		}

		buf.WriteString(strconv.Quote(text))
		buf.WriteString(",\n")
	}

	buf.WriteString("}\n")

	source, err := format.Source(buf.Bytes())
	if err != nil {
		log.Fatal(err)
	}

	if _, err := os.Stdout.Write(source); err != nil {
		log.Fatal(err)
	}
}
